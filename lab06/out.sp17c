LOADING sPL program ..
  let {int->int->int} f =  (fun {int->int->int} x       -> fun {int->int} y -> x+y end end)in {int->int} f 4 end
 AS ==> let {Int->Int->Int} f = fun {Int->Int->Int} x -> fun {Int->Int} y -> +[Var(x),Var(y)] end end in {Int->Int}Appln[Var(f); Int(4)] end
TYPE CHECKING program ..
 ==> inferred type Int->Int
TRANSFORMING ==> Appln[fun {(Int->Int->Int)->Int->Int} f -> fun {Int->Int} _pa_var_0 -> Appln[Var(f); Int(4);Var(_pa_var_0)] end end; fun {Int->Int->Int} x -> fun {Int->Int} y -> +[Var(x),Var(y)] end end]
