LOADING sPL program ..
   let {int} s = 5 in  {int}     let {int -> int} f = fun {int -> int} x -> x + s end     in  {int}         let {int} s = 10          in  {int}             (f 3)         end     endend
 AS ==> let {Int} s = Int(5) in {Int}let {Int->Int} f = fun {Int->Int} x -> +[Var(x),Var(s)] end in {Int}let {Int} s = Int(10) in {Int}Appln[Var(f); Int(3)] end end end
TYPE CHECKING program ..
 ==> inferred type Int
TRANSFORMING ==> Appln[fun {Int->Int} s -> Appln[fun {(Int->Int)->Int} f -> Appln[fun {Int->Int} s -> Appln[Var(f); Int(3)] end; Int(10)] end; fun {Int->Int} x -> +[Var(x),Var(s)] end] end; Int(5)]
